<!DOCTYPE html>

<html>
    <head>
        <title>Presentation</title>

        <meta charset='utf-8'>
        <script src='http://html5slides.googlecode.com/svn/trunk/slides.js'></script>

        <style type="text/css">
            .titlePage {
                background: #fff url('img/evolution_chuck.jpg') no-repeat center center;
            }

            .chapterPage {
                background-size:100% 100%
            }

            .desc {
                position:relative;
                width:630px;
                height:630px;
                margin: 0 auto;
            }

            .desc img {
                position:absolute;
                top:0;
                bottom:0;
            }

            .circlesDesc {
                width:400px;
                position:relative;
                margin: 0 auto;
            }
            .circlesDesc img {
                position:absolute;
                top:0;
                bottom:0;
                border: 1px solid #000;
            }

            .iframeDiv {
                width:480px;
                margin: 0 auto;
            }

            .iframeDiv4Times {
                width:820px;
                margin: 0 auto;
                color:#ff0;
            }

            .iframeDivThree {
                width:820px;
                height:330px;
                margin: 0 auto;
            }

            .iframeDivThree iframe {
                height: 330px;
                width:820px;
            }

            .iframeDivMath {
                width:820px;
                height:600px;
                margin: 0 auto;
            }

            .iframeDivMath iframe {
                height: 600px;
                width:820px;
            }

            #threeId pre {
                margin: 0px 0px 4px 0px;
            }

            iframe {
                width:430px;
                border: 0 !important;
                margin: 0 auto;
            }

            h2 {
                color:#fff !important;
                text-shadow: -2px -2px 15px #000, 3px 3px 0px #000;
                font-size:90px !important;
            }

            .mathTerm {
                text-align:center;
                font-weight:bold;
                font-size:35px !important;
                font-family:Courier New,monospace;
            }

            .tspdiv {
                width:450px;
            }


        </style>
    </head>

    <body style='display: none'>

        <section class='slides layout-regular'>

            <article class="titlePage"></article>

            <article>
                <h1>Die Evolution im Rechner</h1>
                <p>Manuel Ernst<br>2012-03-24</p>
            </article>

            <article class="nobackground">
                <img src="img/darwin.jpg" class="centered" style="width:500px">
                <div class="source">Quelle: Matt Collins</div>
            </article>

            <article>
                <h3>Evolutionäre Algorithmen</h3>
                <p>Programmierverfahren dass sich an der Evolution orientiert<br><br></p>
                <h3>Unterteilung</h3>
                <ul class="build">
                    <li>Genetische Programmierung</li>
                    <li>Evolutionsstrategien</li>
                    <li>Evolutionäre Algorithmen</li>
                    <li>Genetische Algorithmen</li>
                </ul>
            </article>

            <article>
                <h3>Evolutionäre Algorithmen</h3>
                <h3>Einsatz</h3>
                <ul class="build">
                    <li>Komplexe Probleme</li>
                    <li>Probleme mit großem Suchraum</li>
                    <li>Probleme die nicht oder nicht effizient berechnet werden können</li>
                </ul>
            </article>

            <article style="background:url(img/dna.jpg) #fff no-repeat right bottom">
                <h3>Genetische Algorithmen</h3>
                <h3>Ablauf</h3>
                <section style="opacity:0.8">
                    <pre>
Erzeuge Population

Solange Terminationskriterium nicht erfüllt
    Wähle Eltern

    Kombiniere Eltern zu Kind

    Verändere Kind
    
    Bewerte Kind

    Füge Kind in Population ein

    Entferne "schlechtestes" Mitglied der Population
Gehe zu Anfang

    
                    </pre>
                </section>

                <p class="source">Quelle (Bild): http://atitude.listen2myradio.com/picture.php?radio_id=1518564&blog=338434</p>
            </article>

            <article style="background:url(img/dna.jpg) #fff no-repeat right bottom">
                <h3>Genetische Algorithmen</h3>
                <h3>Strategiebestandteile</h3>
                <ul class="build">
                    <li>Fitnessfunktion</li>
                    <li>Rekombination</li>
                    <li>Mutation</li>
                    <li>Selektion</li>
                </ul>

                <p class="source">Quelle (Bild): http://atitude.listen2myradio.com/picture.php?radio_id=1518564&blog=338434</p>
            </article>

            <article>
                <h3>Wie funktioniert die ganze Geschichte eigentlich?</h3>
                <div class="desc build centered">
                    <img src="img/desc1.png" width="630">
                    <img src="img/desc2.png" width="630">
                    <img src="img/desc3.png" width="630">
                    <img src="img/desc4.png" width="630">
                    <img src="img/desc5.png" width="630">
                </div>
            </article>

            <article class="">
                <h3>Wie funktioniert die ganze Geschichte eigentlich?</h3>

                <p>Mutations- + Rekombinationsfunktion:</p>

                <section>
                    <pre>
ga.mutate = function( p1, p2 ) {
    var x = { x:0, y:0 };

    //rekombination::
    if ( r() < 0.5 )  x.x = p1.x;     else    x.x = p2.x;
    if ( r() < 0.5 )  x.y = p1.y;     else    x.y = p2.y;

    //mutation:
    if ( r() < 0.3 )
        x.x = x.x + ( r() < 0.5 ? -1 : 1 ) * r() * 4;
    if ( r() < 0.3 )
        x.y = x.y + ( r() < 0.5 ? -1 : 1 ) * r() * 4;

    return x;
};
                    </pre>
                </section>
            </article>

            <article class="">
                <h3>Wie funktioniert die ganze Geschichte eigentlich?</h3>

                <div class="build">
                    <p>Fitnessfunktion:</p>

                    <p>Pseudocode</p>
                    <section>
                        <pre style="margin-top:3px;">
    Addiere x-Koordinate mit y-Koordinate
                        </pre>
                    </section>

                    <p>Quellcode:</p>
                    <section>
                        <pre style="margin-top:3px;">
    ga.getFitness = function( p ) {
        return p.x + p.y;
    };
                        </pre>
                    </section>
                </div>
            </article>

            <article>
                <h3>Wie funktioniert die ganze Geschichte eigentlich?</h3>
                <div class="iframeDiv">
                    <iframe src="diagonal.html"></iframe>
                </div>
            </article>

            <article class="chapterPage" style="background-image:url(img/circles.jpg);">
                <h2>CIRCLES</h2>
            </article>

            <article class="smaller">
                <h3>Circles</h3>
                <p><b>Beschreibung und Problemstellung</b></p>
                <ul class="build">
                    <li><b>Gegeben:</b> Kreise auf einem Spielfeld</li>
                    <li><b>Gesucht:</b>
                        <ul class="build">
                            <li>Ein Kreis der weder den Spielfeldrand</li>
                            <li>noch irgendeinen anderen Kreis überlappt,</li>
                            <li>sowie dessen Flächeninhalt maximal ist.</li>
                        </ul>
                    </li>
                </ul>
                <div class="circlesDesc build">
                    <img src="img/circles1.png">
                    <img src="img/circles2.png">
                </div>
            </article>

            <article>
                <h3>Circles</h3>
                <p>Triviallösung</p>
                <div class="build iframeDiv">
                    <iframe src="trivial.html"></iframe>
                </div>
            </article>

            <article>
                <h3>Circles</h3>
                <div class="build">
                    <h3>Problemformulierung</h3>
                    <p>Genpool mit beliebiger Zahl beliebiger Samplekreise füllen<br><br></p>

                    <h3>Fitness</h3>
                    <p>Bewerten wie gut ein Kreis die Kriterien erfüllt:</p>
                    <ul class="build">
                        <li>Liegt er (teilweise) außerhalb des Spielfelds? <span class="red">(Penalty)</span></li>
                        <li>Überlagert er andere Kreise? <span class="red">(Penalty)</span></li>
                        <li>Wie groß ist er? <span class="green">(Je größer desto besser)</span></li>
                    </ul>
                </div>
            </article>

            <article>
                <h3>Circles</h3>
                <div class="build">
                    <h3>Fitness</h3>

                    <section>
                        <pre>
    overlapping  = Anzahl ueberlappende Kreise

    outside      = Anzahl der Schnittpunkte mit Spielfeldrand

    area         = Flaecheninhalt des Kreises

    fitness      = area

    wenn outside > 0 oder overlapping > 0
        fitness = fitness * -1;

    wenn overlapping > 0
        fitness = fitness + 2 * overlapping

    wenn outside > 0
        fitness = fitness + 4 * outside

                        </pre>
                    </section>
                </div>
            </article>

            <article>
                <h3>Circles</h3>
                <div class="build">
                    <h3>Rekombination<br><br></h3>

                    <h3>Eltern</h3>
                    <span class="green">{ x: 100, y: 10, radius: 7  }<br></span>
                    <span class="blue">{ x: 331, y: 77, radius: 50 }<br><br></span>

                    <h3>Kind</h3>
                    <span>{ <span class="green">x: 100</span>, <span class="blue">y: 77</span>, <span class="blue">radius: 50</span> }<br><br></span>

                    <h3>Mutation</h3>
                    <span>{ <span class="red">x: 103</span>, <span class="blue">y: 77</span>, <span class="red">radius: 49</span> }</span>
                </div>
            </article>

            <article>
                <h3>Circles</h3>
                <div class="build">
                    <h3>So läufts:</h3>
                    <div class="iframeDiv">
                        <iframe src="../../circles/scene1.html"></iframe>
                    </div>
                </div>
            </article>

            <article class="fill">
                <h2>Eigenschaften</h2>
            </article>

            <article>
                <h3>Eigenschaften</h3>
                <div class="build">
                    <p>Der eingeschlagene Lösungsweg ist niemals gleich</p>
                    <div class="iframeDiv">
                        <iframe src="../../circles/scene1_4times.html"></iframe>
                    </div>
                </div>
            </article>

            <article>
                <h3>Eigenschaften</h3>
                <div class="build">
                    <p>Die gefundene Lösung ist nicht immer optimal</p>
                    <div class="iframeDiv">
                        <iframe src="../../circles/suboptimal.html"></iframe>
                    </div>
                </div>
            </article>

            <article>
                <h3>Eigenschaften</h3>
                <div class="build">
                    <p>Gefundene Lösungen sind nicht deterministisch</p>
                    <div class="iframeDiv">
                        <iframe src="../../circles/vary.html"></iframe>
                    </div>
                </div>
            </article>

            <article>
                <h3>Eigenschaften</h3>
                <div class="build">
                    <p>Extremsituationen</p>
                    <div class="iframeDiv">
                        <iframe src="../../circles/fail.html"></iframe>
                    </div>
                </div>
            </article>

            <article>
                <h3>Eigenschaften</h3>
                <div class="build">
                    <p>Extremsituationen</p>
                    <div class="iframeDiv">
                        <iframe src="../../circles/fail2.html"></iframe>
                    </div>
                </div>
            </article>

            <article class="fill">
                <img src="img/wrench.jpg" style="width:500px;margin: 0 auto">
                <h2>Einflussfaktoren</h2>
                <div class="source">Quelle: Internet (http://www.publicdomainpictures.net/)</div>
            </article>

            <article>
                <h3>Einflussfaktoren</h3>
                <div class="build">
                    <p>Genepoolgröße</p>
                    <div class="iframeDiv">
                        <iframe src="../../circles/scene1_lowPool.html"></iframe>
                    </div>
                </div>
            </article>

            <article>
                <h3>Einflussfaktoren</h3>
                <div class="build">
                    <p>Genepoolgröße</p>
                    <div class="iframeDiv">
                        <iframe src="../../circles/scene1_highPool.html"></iframe>
                    </div>
                </div>
            </article>

            <article>
                <h3>Einflussfaktoren</h3>
                <div class="build">
                    <p>Design der Fitnessfunktionen bestimmen das Verhalten (und die Performance) des Algorithmus</p>
                    <div class="iframeDiv">
                        <iframe src="../../circles/suboptimal.html"></iframe>
                    </div>
                </div>
            </article>

            <article class="smaller">
                <h3>Einflussfaktoren</h3>
                <div id="threeId" class="build">
                    <p>Design der Fitnessfunktionen bestimmen das Verhalten (und die Performance) des Algorithmus</p>
                    <div class="iframeDivThree">
                        <iframe src="../../circles/scene1_three.html"></iframe>
                    </div>
                    <section>
                        <pre>
    return outside || overlapping ? -1 : 1 *
                       ( outside * 4 ) *
                       ( overlapping * 2 ) *
                       area;
                        </pre>
                    </section>
                    <section>
                        <pre>
    return overlapping || outside ? 1/area : area ;
                        </pre>
                    </section>
                    <section>
                        <pre>
    return overlapping || outside ? -1 * ( outside + overlapping ) : area*area;
                        </pre>
                    </section>
                </div>
            </article>

            <article class="chapterPage" style="background-image:url(img/converge.jpg);">
            </article>

            <article>
                <h3>Konvergenz</h3>
                <ul class="build">
                    <li>Abbruchkriterium</li>
                    <li>Konvergenzerkennung ist essentiell für einen effizienten Algorithmus</li>
                </ul>
            </article>

            <article>
                <h3>Konvergenz</h3>

                <div class="build">
                    <p>Einfache Konvergenzerkennung (Circles):</p>

                    <section>
                        <pre>
    ga.termCriterium = function() {
        var cnt = this.pool.length * 0.8;
        var tmp = this.pool[0].f;
        for( var i = 0; i < cnt; i++ ) {
            if ( tmp !== this.pool[i].f ) return false;
        }
        return true;
    };
                        </pre>
                    </section>
                    <h3>Bessere Lösungen:</h3>
                    <ul class="build">
                    <li>Veränderung der Fitness gegenüber dem Durchschnitt</li>
                    <li>Veränderung der Fitness über die letzten x Durchläufe</li>
                    </ul>
                </div>
            </article>

<!--
            <article>
                <h3>Optimierungsmöglichkeiten (Circles)</h3>
                <p>Mutation</p>
            </article>

            <article>
                <h3>Heads up</h3>
                <ul>
                    <li>Vergleich der drei Kameraden</li>
                    <li>Insert Iframe dingsi here</li>
                </ul>
            </article>
-->
            <article class="chapterPage" style="background-image:url(img/math.jpg);">
            </article>

            <article>
                <h3>Math</h3>
                <div class="build">
                    <p>Finde zu einer beliebigen Zahl einen beliebigen Term der diese Zahl darstellt:</p>
                    <p class="mathTerm">20 + 20 + 4/2 = 42</p>
                    <p class="mathTerm">120/30 + 2 = 42</p>
                    <p class="mathTerm">70 - 30 + 8 - 6 = 42</p>
                    <p>Triviallösung?</p>
                </div>
            </article>

            <article>
                <h3>Math</h3>
                <div class="build">
                    <h3>Problemformulierung</h3>
                    <div>
                        <table>
                            <tr><td>0000</td><td>0</td></tr>
                            <tr><td>0001</td><td>1</td></tr>
                            <tr><td>0010</td><td>2</td></tr>
                            <tr><td colspan="2">...</td></tr>
                            <tr><td>1001</td><td>9</td></tr>
                            <tr><td>1010</td><td>+</td></tr>
                            <tr><td>1011</td><td>-</td></tr>
                            <tr><td>1100</td><td>*</td></tr>
                            <tr><td>1101</td><td>/</td></tr>
                        </table>
                    </div>
                </div>
            </article>

            <article class="smaller">
                <h3>Math</h3>

                <div class="build">
                    <h3>Problemformulierung</h3>
                    <table class="genomeTable">
                        <tr><th>genome</th><th>fitness</th><th>interpreted</th><th>parsed</th><th>value</th></tr>
                        <tr><td>0001...001</td><td>0.1</td><td>1+*+//31</td><td>1+31</td><td>32</td></tr>
                        <tr><td>1011...000</td><td>0.08333333333333333</td><td>-*8+9+374</td><td>8+9+37</td><td>54</td></tr>
                        <tr><td>1001...011</td><td>0.08333333333333333</td><td>967-66746-</td><td>96-66</td><td>30</td></tr>
                    </table>
                    <br>

                    <h3>Rekombination</h3>
                    <h3>Eltern</h3>
                    <span class="blue">101111001111100010101001101000110111000000000000<br></span>
                    <span class="green">100101100111101101100110011111101110010001101011<br><br></span>
                    <h3>Kind</h3>
                    <span><span class="blue">101111001111100010101001</span><span class="green">011111101110010001101011<br><br></span></span>

                    <h3>Mutation</h3>
                    <span><span class="blue">101111001<span class="red">0</span>11100010101001</span><span class="green">0<span class="red">0</span>11111011100100011<span class="red">1</span>1011</span></span>
                </div>
            </article>

            <article class="smaller">
                <h3>Math</h3>
                <h3>Fitness</h3>
                <section>
                    <pre>
    var v = eval( p );
    var difference = Math.abs( target - v );

    //no operators found!
    if ( !operators ) {
        difference *= -1;
    }

    var f = 1 / difference;

    return f;
                    </pre>
                </section>
            </article>

            <article>
                <h3>Math</h3>
                <div class="iframeDivMath">
                    <iframe src="../../math2/math2.html"></iframe>
                </div>
            </article>

            <article class="nobackground">
                <img src="img/tsp.jpg" class="centered" style="width:600px">
                <div class="source">Quelle: Internet (http://www.lemaxland.co.uk/)</div>
            </article>

            <article>
                <h3>Travelling Salesman problem</h3>
                <div class="build desc centered tspdiv">
                    <img src="img/tsp1.png" width="450">
                    <img src="img/tsp2.png" width="450">
                    <img src="img/tsp3.png" width="450">
                </div>
            </article>

            <article>
                <h3>Travelling Salesman problem</h3>
                <div class="build">
                    <h3>Problemformulierung</h3>
                    <p>Möglicher Weg:<br></p>
                    <span class="mathTerm">1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5<br><br></span>

                    <h3>Rekombination</h3>
                    <h3>Eltern</h3>
                    <span class="mathTerm green">5 -&gt; 3 -&gt; 1 -&gt; 4 -&gt; 2<br></span>
                    <span class="mathTerm blue">2 -&gt; 4 -&gt; 5 -&gt; 3 -&gt; 1<br><br></span>

                    <h3>Kind</h3>
                    <span class="mathTerm"><span class="green">5</span> -&gt; <span class="blue">4</span> -&gt; <span class="green">1</span> -&gt; <span class="blue">3</span> -&gt; <span class="green">2</span><br><br></span>

                    <h3>Mutation (0-x Mal)</h3>
                    <span class="mathTerm"><span class="red">3</span> -&gt; <span class="blue">4</span> -&gt; <span class="green">1</span> -&gt; <span class="red">5</span> -&gt; <span class="green">2</span><br><br></span>
                </div>
            </article>

            <article class="smaller">
                <h3>Travelling Salesman problem</h3>
                <h3>Rekombination</h3>
                <section>
                    <pre>
    var tmp = [];
    var log = {};
    var lookup = {};
    for( var i = 0; i < a.length; i++ ) {
        lookup[ a[ i ] ] = i;
    }

    var fContinue = true;
    var index = 0;
    while( fContinue ) {
        tmp[ index ] = a[ index ];
        log[ a[index] ] = true;

        index = lookup[ b[ index ] ];
        if ( log[ a[index] ] !== undefined ) {
            fContinue = false;
        }
    }

    for( var i = 0; i < a.length; i++ ) {
        if ( tmp[ i ] === undefined ) {
            tmp[ i ] = b[ i ];
        }
    }
                    </pre>
                </section>
            </article>

            <article class="smaller">
                <h3>Travelling Salesman Problem</h3>
                <div class="build">
                    <h3>Fitness</h3>
                    <p>Guess what.... :)</p>
                    <section>
                        <pre>
var prev            = null;
var overallLength   = 0;
for( var k in points ) {
    var station = points[k]-1;
    if ( prev !== null ) {
        overallLength += scenario[ prev ].distance( scenario[ station ] );
    }
    prev = station;
}

//distance between first and last city
var firstCity   = scenario[ points[ 0 ] -1 ];
var lastCity    = scenario[ points[ points.length - 1 ] - 1 ];
                            
overallLength   += firstCity.distance( lastCity );

return overallLength;
                        </pre>
                    </section>
                </div>
            </article>

            <article>
                <h3>Travelling Salesman Problem</h3>
                <div class="iframeDivMath">
                    <iframe src="../../tsp/tsp.html"></iframe>
                </div>
            </article>

<!--
            <article class="chapterPage" style="background-image:url(img/circles.jpg);">
                <h2>Circles revisited</h2>
            </article>

            <article>
                <h3>Circles (again)</h3>
                <p>Ziel + Problemstellung</p>
                <p>Triviallösung</p>
            </article>

            <article>
                <h3>Circles (again)</h3>
                <p>GA for the rescue!11einself</p>
                <p>Problemformulierung</p>
                <p>Mutation</p>
                <p>Rekombination</p>
                <p>Selektion</p>
            </article>
-->
<!--
            <article class="fill">
                <img src="img/ant.jpg">
                <div class="source">Quelle: Internet (http://www.oldskoolman.de)</div>
            </article>
-->

            <article>
                <h1 class="centered">Fragen?</h1>
            </article>

            <article>
                <h3>Code und Slides:</h3>
                <ul>
                    <li>http://www.bckspc.de/evolution</li>
                </ul>
                <br><br>
                <h3>Danke an:</h3>
                <ul>
                    <li>Google (für die schicken Slides)</li>
                </ul>
            </article>

            <article>
                <h1 class="centered">Danke fürs Zuhören!</h1>
            </article>

            <article class='smaller'>
                <q>Sometimes sentences don't end as you strawberry.</q>

                <div class='author'>unknown</div>
            </article>

        </section>
    </body>
</html>
